version: '3'

services:
  zookeeper:
    container_name: kafka-zookeeper-cluster-ip-service
    image: bitnami/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "./data/zookeeper:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka-cluster-ip-service
    image: bitnami/kafka
    ports:
      - "9092:9092"
    volumes:
      - "./data/kafka:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-cluster-ip-service:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka-zookeeper-cluster-ip-service:2181
    depends_on:
      - zookeeper

  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  microservice-a:
    container_name: microservice-a-cluster-ip-service
    image: k8s-test-microservice-a-docker-compose-image
    build:
      context: microservice-a
      dockerfile: ./Dockerfile.dev
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=k8s-test.com
      - VIRTUAL_PATH=/microservice-a
    env_file:
      - ./microservice-a/.env
    volumes:
      - ./microservice-a/src/:/usr/src/app/src/
    depends_on:
      - kafka
      - microservice-a-database
      - nginx-proxy

  microservice-a-database:
    container_name: microservice-a-database-cluster-ip-service
    image: mongo
    ports:
      - "27080:27017"
    volumes:
      - ./data/microservice-a:/data/db
      
  microservice-b:
    container_name: microservice-b-cluster-ip-service
    image: k8s-test-microservice-b-docker-compose-image
    build:
      context: microservice-b
      dockerfile: ./Dockerfile.dev
    expose:
      - "8081"
    environment:
      - VIRTUAL_HOST=k8s-test.com
      - VIRTUAL_PATH=/microservice-b
    env_file:
      - ./microservice-b/.env
    volumes:
      - ./microservice-b/src/:/usr/src/app/src/
    depends_on:
      - kafka
      - nginx-proxy

  client:
    container_name: client-cluster-ip-service
    image: k8s-test-client-docker-compose-image
    build:
      context: client
      dockerfile: ./Dockerfile.dev
    expose:
      - "3000"
    environment:
      - VIRTUAL_HOST=k8s-test.com
      - VIRTUAL_PATH=/
    env_file:
      - ./client/.env
    volumes:
      - ./client/src/:/usr/src/app/src/
    depends_on:
      - nginx-proxy
